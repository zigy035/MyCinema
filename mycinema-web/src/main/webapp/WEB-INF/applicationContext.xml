<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="cinemaPU"/>
		<property name="packagesToScan"> 
			<list>
                <value>com.mycinema.web.model</value>
            </list>
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
<!-- 				<prop key="hibernate.hbm2ddl.auto">create-drop</prop> -->
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>
	
	<bean id="entityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean id="movieDAO" class="com.mycinema.web.dao.MovieDAOImpl">
		<property name="entityManager" ref="entityManager" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<bean id="movieService" class="com.mycinema.web.service.MovieServiceImpl">
		<property name="movieDAO" ref="movieDAO" />
		<property name="ticketDAO" ref="ticketDAO" />
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations">
        	<list>
				<value>classpath:sqlmaps/Movie.xml</value>
				<value>classpath:sqlmaps/MovieBroadcast.xml</value>
				<value>classpath:sqlmaps/AuthUser.xml</value>
				<value>classpath:sqlmaps/Ticket.xml</value>
				<value>classpath:sqlmaps/Theatre.xml</value>
				<value>classpath:sqlmaps/Booking.xml</value>
			</list>
        </property>
    </bean>
	
	<!-- <bean id="movieDAO" class="com.mycinema.web.dao.MovieDAOImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean> -->
	
	<bean id="theatreDAO" class="com.mycinema.web.dao.TheatreDAOImpl">
		<property name="entityManager" ref="entityManager" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<bean id="authUserDAO" class="com.mycinema.web.dao.AuthUserDAOImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="ticketDAO" class="com.mycinema.web.dao.TicketDAOImpl">
		<property name="entityManager" ref="entityManager" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<!-- <bean id="movieService" class="com.mycinema.web.service.MovieServiceImpl">
		<property name="movieDAO" ref="movieDAO"/>
	</bean> -->
	
	<bean id="theatreService" class="com.mycinema.web.service.TheatreServiceImpl">
		<property name="theatreDAO" ref="theatreDAO"/>
	</bean>
	
	<bean id="authUserService" class="com.mycinema.web.service.AuthUserServiceImpl">
		<property name="authUserDAO" ref="authUserDAO"/>
	</bean>
	
	<bean id="ticketService" class="com.mycinema.web.service.TicketServiceImpl">
		<property name="ticketDAO" ref="ticketDAO"/>
		<property name="theatreDAO" ref="theatreDAO"/>
		<property name="movieDAO" ref="movieDAO"/>
	</bean>

	<bean id="authUserValidator" class="com.mycinema.web.validator.AuthUserValidator">
		<property name="authUserDAO" ref="authUserDAO"/>
	</bean>
	
	<bean id="bookingMatrixValidator" class="com.mycinema.web.validator.BookingMatrixValidator">
		<property name="movieDAO" ref="movieDAO"/>
	</bean>
	
	<bean id="movieBroadcastValidator" class="com.mycinema.web.validator.MovieBroadcastValidator">
		<property name="movieDAO" ref="movieDAO"/>
		<property name="theatreDAO" ref="theatreDAO"/>
	</bean>

	<bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<constructor-arg value="1" />
	</bean>

	<!-- 
	<aop:config>
		<aop:pointcut id="txMovieService" expression="execution(* com.mycinema.web.service.MovieServiceImpl.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txMovieService"/>
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="txTicketService" expression="execution(* com.mycinema.web.service.TicketServiceImpl.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txTicketService"/>
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="txAuthUserService" expression="execution(* com.mycinema.web.service.AuthUserServiceImpl.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txAuthUserService"/>
	</aop:config>
 	
 	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
		</tx:attributes>
	</tx:advice>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />    
	</bean>
	 -->

</beans>